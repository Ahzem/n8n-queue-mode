services:
  redis:
    image: redis:7.2-alpine
    container_name: n8n-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - n8n-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: n8n-postgres
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n_user
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n_user -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n-main:
    image: n8nio/n8n:latest
    container_name: n8n-main
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file: 
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
    ports:
      - "5678:5678"
    networks:
      - n8n-network
    restart: unless-stopped

  n8n-worker:
    image: n8nio/n8n:latest
    container_name: n8n-worker
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file: 
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
    command: worker
    networks:
      - n8n-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  n8n_data:

networks:
  n8n-network:
    driver: bridge
